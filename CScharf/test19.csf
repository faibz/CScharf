// Test classes, interfaces, and inheritance

public interface Shape {
	int GetArea();
}

public class Rectangle : Shape {
	public Rectangle(int len, int wid) {
		length = len;
		width = wid;
	}
	
	int length = 12;
	int width = 8;
	instance innerRect;
	
	public int SetLength(int newLen) {
		write("Setting length to: " + newLen);
		length = newLen;
		
		return -1;
	}
	
	public int SetWidth(int newWid) {
		write("Setting width to: " + newWid);
		width = newWid;
		
		return -1;
	}
	
	public int SetInnerRect(instance rect) {
		innerRect = rect;
		
		return -1;
	}
	
	//Modify this to test interface inheritance is enforced
	public int GetArea() {
		return length * width;
	}
	
	public int GetInnerRectArea() {
		return innerRect.GetArea();
	}
}

instance rect = new Rectangle(10, 5);
write(rect.SetInnerRect(new Rectangle(12, 6)));

write("Main rectangle area: " + rect.GetArea()); //Tests that calls work at various levels
write("Inner rectangle area: " + rect.GetInnerRectArea());
write("Inner rectangle area: " + rect.innerRect.GetArea());

//rect.innerRect.SetLength(15);

write(rect.SetWidth(2));
write(rect.innerRect.SetLength(20));

write("Main rectangle area: " + rect.GetArea()); //Tests that only one class instance affected
write("Inner rectangle " + rect.innerRect.GetArea());

//write(rect.length);
//write(rect.GetArea());
